version: '3'

volumes:
  postgres_data:
    driver: local

services:
  postgres:
    image: postgres:15.2
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./_infrastructure/postgre/init/:/docker-entrypoint-initdb.d/
    ports:
      - 25432:5432

  keycloak:
    image: quay.io/keycloak/keycloak:20.0
    environment:
      KC_HOSTNAME: localhost
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
#      KEYCLOAK_IMPORT: '/opt/keycloak/data/import/realm-export.json'
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_LOG_LEVEL: info
    volumes:
      - ./_infrastructure/keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    command:
      - start-dev --import-realm
    ports:
      - 8080:8080
    depends_on:
      - postgres
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_SERVER_ID: 1
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "22181:2181"
#
#  broker:
#    image: confluentinc/cp-kafka:latest
#    container_name: broker
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
